unit uBtnPrimary.TypeButton.Model;

interface

uses uITypeButton, Vcl.Graphics, Vcl.ExtCtrls, uTypes, uColors;

type
  TBtnPrimary = class(TInterfacedObject, iTypeButton)
  private
    FtypeButton : tTypeButton;
    procedure Enter(sender: TObject);
    procedure Leave(sender: TObject);
    function MouseEnter : tNotifyEvent;
    function MouseLeave : tNotifyEvent;
    function ColorDefaultBord : TColor;
    function ColorDefaultBackground : TColor;
    function ColorDefaultFont : TColor;
    function GetTypeButton : tTypeButton;
    procedure SetTypeButton(Value : tTypeButton);
  public
    procedure ApplyAnimation(PainelBtn, PainelBorda : TPanel);
    class function New(Value : tTypeButton = Outline) : ITypeButton;

    property TipoButton : tTypeButton read GetTypeButton write SetTypeButton;
  end;

implementation

{ TBtnPrimary }

procedure TBtnPrimary.ApplyAnimation(PainelBtn, PainelBorda: TPanel);
begin
  PainelBorda.Color    := ColorDefaultBord;
  PainelBtn.Color      := ColorDefaultBackground;
  PainelBtn.Font.Color := ColorDefaultFont;

  PainelBtn.OnMouseEnter := Enter;
  PainelBtn.OnMouseLeave := Leave;
end;

function TBtnPrimary.ColorDefaultBackground: TColor;
begin
  case FtypeButton of
    filled : Result := Blue;
    Outline: Result := white;
  end;
end;

function TBtnPrimary.ColorDefaultBord: TColor;
begin
  Result := Blue;
end;

function TBtnPrimary.ColorDefaultFont: TColor;
begin
  case FtypeButton of
    filled : Result := white;
    Outline: Result := Blue;
  end;
end;

procedure TBtnPrimary.Enter(sender: TObject);
begin
  TPanel(sender).Color      := Blue;
  TPanel(sender).Font.Color := white;
end;

function TBtnPrimary.GetTypeButton: tTypeButton;
begin
  Result := FtypeButton;
end;

procedure TBtnPrimary.Leave(sender: TObject);
begin
  TPanel(sender).Color      := white;
  TPanel(sender).Font.Color := Blue;
end;

function TBtnPrimary.MouseEnter: tNotifyEvent;
begin
  Result := Enter;
end;

function TBtnPrimary.MouseLeave: tNotifyEvent;
begin
  Result := Leave;
end;

class function TBtnPrimary.New(Value : tTypeButton = Outline) : ITypeButton;
begin
  Result := Self.Create;
  Result.TipoButton := Value;
end;

procedure TBtnPrimary.SetTypeButton(Value: tTypeButton);
begin
  FtypeButton := Value;
end;

end.
